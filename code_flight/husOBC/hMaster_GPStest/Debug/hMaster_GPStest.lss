
hMaster_GPStest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006e  00800100  00000b6c  00000c00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b6c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000091  0080016e  0080016e  00000c6e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c6e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ccc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000d08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b62  00000000  00000000  00000e08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c3c  00000000  00000000  0000296a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009ee  00000000  00000000  000035a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000230  00000000  00000000  00003f94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006e0  00000000  00000000  000041c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002e8  00000000  00000000  000048a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00004b8c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__vector_18>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e6       	ldi	r30, 0x6C	; 108
  a0:	fb e0       	ldi	r31, 0x0B	; 11
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 36       	cpi	r26, 0x6E	; 110
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ae e6       	ldi	r26, 0x6E	; 110
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	af 3f       	cpi	r26, 0xFF	; 255
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 1c 02 	call	0x438	; 0x438 <main>
  c6:	0c 94 b4 05 	jmp	0xb68	; 0xb68 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <init_UART_GPS>:
volatile struct GPS_reading gps;

void init_UART_GPS(void )
{

  UCSR0A = 0;
  ce:	1b b8       	out	0x0b, r1	; 11
  UCSR0B = 0;
  d0:	1a b8       	out	0x0a, r1	; 10
  UCSR0C = 0;
  d2:	e5 e9       	ldi	r30, 0x95	; 149
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	10 82       	st	Z, r1
  
  ///Double Baud Rate
  UCSR0A |= _BV(U2X0);
  d8:	59 9a       	sbi	0x0b, 1	; 11
  ///Enable Reception
  UCSR0B |= _BV(RXEN0) | _BV(TXEN0) | _BV(RXCIE0);
  da:	8a b1       	in	r24, 0x0a	; 10
  dc:	88 69       	ori	r24, 0x98	; 152
  de:	8a b9       	out	0x0a, r24	; 10
  ///8-bit Data Byte, 2 Stop bits
  UCSR0C |= _BV(USBS0) | _BV(UCSZ01) | _BV(UCSZ00);
  e0:	80 81       	ld	r24, Z
  e2:	8e 60       	ori	r24, 0x0E	; 14
  e4:	80 83       	st	Z, r24
  ///Set Baud Rate to 9600
  UBRR0L = 103;
  e6:	87 e6       	ldi	r24, 0x67	; 103
  e8:	89 b9       	out	0x09, r24	; 9
  UBRR0H = 0;
  ea:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
  ee:	08 95       	ret

000000f0 <__vector_18>:
}

/** @brief Interrupt on receiving a byte through UART GPS
 */
ISR(USART0_RX_vect)
{
  f0:	1f 92       	push	r1
  f2:	0f 92       	push	r0
  f4:	0f b6       	in	r0, 0x3f	; 63
  f6:	0f 92       	push	r0
  f8:	11 24       	eor	r1, r1
  fa:	0b b6       	in	r0, 0x3b	; 59
  fc:	0f 92       	push	r0
  fe:	cf 92       	push	r12
 100:	df 92       	push	r13
 102:	ef 92       	push	r14
 104:	ff 92       	push	r15
 106:	0f 93       	push	r16
 108:	1f 93       	push	r17
 10a:	2f 93       	push	r18
 10c:	3f 93       	push	r19
 10e:	4f 93       	push	r20
 110:	5f 93       	push	r21
 112:	6f 93       	push	r22
 114:	7f 93       	push	r23
 116:	8f 93       	push	r24
 118:	9f 93       	push	r25
 11a:	af 93       	push	r26
 11c:	bf 93       	push	r27
 11e:	ef 93       	push	r30
 120:	ff 93       	push	r31
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	cd b7       	in	r28, 0x3d	; 61
 128:	de b7       	in	r29, 0x3e	; 62
 12a:	c0 5a       	subi	r28, 0xA0	; 160
 12c:	d1 09       	sbc	r29, r1
 12e:	de bf       	out	0x3e, r29	; 62
 130:	cd bf       	out	0x3d, r28	; 61
  char array[40];
  char arrayy[40];
  char arrayx[40];
  char arrayz[40];
  ///Buffer the Received Byte
  last_byte = UDR0;
 132:	8c b1       	in	r24, 0x0c	; 12
 134:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <last_byte>
  
  ///Put the received byte in the last 4-bytes buffer
  buffer = buffer << 8;
 138:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <buffer>
 13c:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <buffer+0x1>
 140:	a0 91 72 01 	lds	r26, 0x0172	; 0x800172 <buffer+0x2>
 144:	b0 91 73 01 	lds	r27, 0x0173	; 0x800173 <buffer+0x3>
 148:	ba 2f       	mov	r27, r26
 14a:	a9 2f       	mov	r26, r25
 14c:	98 2f       	mov	r25, r24
 14e:	88 27       	eor	r24, r24
 150:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <buffer>
 154:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <buffer+0x1>
 158:	a0 93 72 01 	sts	0x0172, r26	; 0x800172 <buffer+0x2>
 15c:	b0 93 73 01 	sts	0x0173, r27	; 0x800173 <buffer+0x3>
  buffer &= 0xFFFFFF00;
 160:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <buffer>
 164:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <buffer+0x1>
 168:	a0 91 72 01 	lds	r26, 0x0172	; 0x800172 <buffer+0x2>
 16c:	b0 91 73 01 	lds	r27, 0x0173	; 0x800173 <buffer+0x3>
 170:	88 27       	eor	r24, r24
 172:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <buffer>
 176:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <buffer+0x1>
 17a:	a0 93 72 01 	sts	0x0172, r26	; 0x800172 <buffer+0x2>
 17e:	b0 93 73 01 	sts	0x0173, r27	; 0x800173 <buffer+0x3>
  buffer |= (uint32_t) last_byte;
 182:	20 91 6f 01 	lds	r18, 0x016F	; 0x80016f <last_byte>
 186:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <buffer>
 18a:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <buffer+0x1>
 18e:	a0 91 72 01 	lds	r26, 0x0172	; 0x800172 <buffer+0x2>
 192:	b0 91 73 01 	lds	r27, 0x0173	; 0x800173 <buffer+0x3>
 196:	82 2b       	or	r24, r18
 198:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <buffer>
 19c:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <buffer+0x1>
 1a0:	a0 93 72 01 	sts	0x0172, r26	; 0x800172 <buffer+0x2>
 1a4:	b0 93 73 01 	sts	0x0173, r27	; 0x800173 <buffer+0x3>
  
  ///Check if the last byte was for position
  if(pos <12)
 1a8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1ac:	8c 30       	cpi	r24, 0x0C	; 12
 1ae:	08 f0       	brcs	.+2      	; 0x1b2 <__vector_18+0xc2>
 1b0:	75 c0       	rjmp	.+234    	; 0x29c <__vector_18+0x1ac>
    ///* Put the data into the structure
   // *((uint8_t *)&gps.x + pos) = last_byte;
   // sprintf(array,"%x",last_byte);
	//transmit_string_UART0(array);
    ///* Increment position and terminate it if full
	if(pos<4)
 1b2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1b6:	84 30       	cpi	r24, 0x04	; 4
 1b8:	18 f5       	brcc	.+70     	; 0x200 <__vector_18+0x110>
	{
		
		Current_state.gps.x = Current_state.gps.x << 8;
 1ba:	e1 ea       	ldi	r30, 0xA1	; 161
 1bc:	f1 e0       	ldi	r31, 0x01	; 1
 1be:	80 81       	ld	r24, Z
 1c0:	91 81       	ldd	r25, Z+1	; 0x01
 1c2:	a2 81       	ldd	r26, Z+2	; 0x02
 1c4:	b3 81       	ldd	r27, Z+3	; 0x03
 1c6:	ba 2f       	mov	r27, r26
 1c8:	a9 2f       	mov	r26, r25
 1ca:	98 2f       	mov	r25, r24
 1cc:	88 27       	eor	r24, r24
 1ce:	80 83       	st	Z, r24
 1d0:	91 83       	std	Z+1, r25	; 0x01
 1d2:	a2 83       	std	Z+2, r26	; 0x02
 1d4:	b3 83       	std	Z+3, r27	; 0x03
		Current_state.gps.x &= 0xFFFFFF00;
 1d6:	80 81       	ld	r24, Z
 1d8:	91 81       	ldd	r25, Z+1	; 0x01
 1da:	a2 81       	ldd	r26, Z+2	; 0x02
 1dc:	b3 81       	ldd	r27, Z+3	; 0x03
 1de:	88 27       	eor	r24, r24
 1e0:	80 83       	st	Z, r24
 1e2:	91 83       	std	Z+1, r25	; 0x01
 1e4:	a2 83       	std	Z+2, r26	; 0x02
 1e6:	b3 83       	std	Z+3, r27	; 0x03
		Current_state.gps.x |= (uint32_t) last_byte;
 1e8:	20 91 6f 01 	lds	r18, 0x016F	; 0x80016f <last_byte>
 1ec:	80 81       	ld	r24, Z
 1ee:	91 81       	ldd	r25, Z+1	; 0x01
 1f0:	a2 81       	ldd	r26, Z+2	; 0x02
 1f2:	b3 81       	ldd	r27, Z+3	; 0x03
 1f4:	82 2b       	or	r24, r18
 1f6:	80 83       	st	Z, r24
 1f8:	91 83       	std	Z+1, r25	; 0x01
 1fa:	a2 83       	std	Z+2, r26	; 0x02
 1fc:	b3 83       	std	Z+3, r27	; 0x03
 1fe:	49 c0       	rjmp	.+146    	; 0x292 <__vector_18+0x1a2>
		/*sprintf(arrayx,"%x %x",last_byte);transmit_string_UART0(arrayx);
		transmit_UART0('\r');*/
	}
	else if (pos<8)
 200:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 204:	88 30       	cpi	r24, 0x08	; 8
 206:	18 f5       	brcc	.+70     	; 0x24e <__vector_18+0x15e>
	{
		Current_state.gps.y = Current_state.gps.y << 8;
 208:	e1 ea       	ldi	r30, 0xA1	; 161
 20a:	f1 e0       	ldi	r31, 0x01	; 1
 20c:	84 81       	ldd	r24, Z+4	; 0x04
 20e:	95 81       	ldd	r25, Z+5	; 0x05
 210:	a6 81       	ldd	r26, Z+6	; 0x06
 212:	b7 81       	ldd	r27, Z+7	; 0x07
 214:	ba 2f       	mov	r27, r26
 216:	a9 2f       	mov	r26, r25
 218:	98 2f       	mov	r25, r24
 21a:	88 27       	eor	r24, r24
 21c:	84 83       	std	Z+4, r24	; 0x04
 21e:	95 83       	std	Z+5, r25	; 0x05
 220:	a6 83       	std	Z+6, r26	; 0x06
 222:	b7 83       	std	Z+7, r27	; 0x07
		Current_state.gps.y &= 0xFFFFFF00;
 224:	84 81       	ldd	r24, Z+4	; 0x04
 226:	95 81       	ldd	r25, Z+5	; 0x05
 228:	a6 81       	ldd	r26, Z+6	; 0x06
 22a:	b7 81       	ldd	r27, Z+7	; 0x07
 22c:	88 27       	eor	r24, r24
 22e:	84 83       	std	Z+4, r24	; 0x04
 230:	95 83       	std	Z+5, r25	; 0x05
 232:	a6 83       	std	Z+6, r26	; 0x06
 234:	b7 83       	std	Z+7, r27	; 0x07
		Current_state.gps.y |= (uint32_t) last_byte;
 236:	20 91 6f 01 	lds	r18, 0x016F	; 0x80016f <last_byte>
 23a:	84 81       	ldd	r24, Z+4	; 0x04
 23c:	95 81       	ldd	r25, Z+5	; 0x05
 23e:	a6 81       	ldd	r26, Z+6	; 0x06
 240:	b7 81       	ldd	r27, Z+7	; 0x07
 242:	82 2b       	or	r24, r18
 244:	84 83       	std	Z+4, r24	; 0x04
 246:	95 83       	std	Z+5, r25	; 0x05
 248:	a6 83       	std	Z+6, r26	; 0x06
 24a:	b7 83       	std	Z+7, r27	; 0x07
 24c:	22 c0       	rjmp	.+68     	; 0x292 <__vector_18+0x1a2>
		transmit_UART0('\r');*/
	}
	
	else //if(pos<12)
	{
		Current_state.gps.z = Current_state.gps.z << 8;
 24e:	e1 ea       	ldi	r30, 0xA1	; 161
 250:	f1 e0       	ldi	r31, 0x01	; 1
 252:	80 85       	ldd	r24, Z+8	; 0x08
 254:	91 85       	ldd	r25, Z+9	; 0x09
 256:	a2 85       	ldd	r26, Z+10	; 0x0a
 258:	b3 85       	ldd	r27, Z+11	; 0x0b
 25a:	ba 2f       	mov	r27, r26
 25c:	a9 2f       	mov	r26, r25
 25e:	98 2f       	mov	r25, r24
 260:	88 27       	eor	r24, r24
 262:	80 87       	std	Z+8, r24	; 0x08
 264:	91 87       	std	Z+9, r25	; 0x09
 266:	a2 87       	std	Z+10, r26	; 0x0a
 268:	b3 87       	std	Z+11, r27	; 0x0b
		Current_state.gps.z &= 0xFFFFFF00;
 26a:	80 85       	ldd	r24, Z+8	; 0x08
 26c:	91 85       	ldd	r25, Z+9	; 0x09
 26e:	a2 85       	ldd	r26, Z+10	; 0x0a
 270:	b3 85       	ldd	r27, Z+11	; 0x0b
 272:	88 27       	eor	r24, r24
 274:	80 87       	std	Z+8, r24	; 0x08
 276:	91 87       	std	Z+9, r25	; 0x09
 278:	a2 87       	std	Z+10, r26	; 0x0a
 27a:	b3 87       	std	Z+11, r27	; 0x0b
		Current_state.gps.z |= (uint32_t) last_byte;
 27c:	20 91 6f 01 	lds	r18, 0x016F	; 0x80016f <last_byte>
 280:	80 85       	ldd	r24, Z+8	; 0x08
 282:	91 85       	ldd	r25, Z+9	; 0x09
 284:	a2 85       	ldd	r26, Z+10	; 0x0a
 286:	b3 85       	ldd	r27, Z+11	; 0x0b
 288:	82 2b       	or	r24, r18
 28a:	80 87       	std	Z+8, r24	; 0x08
 28c:	91 87       	std	Z+9, r25	; 0x09
 28e:	a2 87       	std	Z+10, r26	; 0x0a
 290:	b3 87       	std	Z+11, r27	; 0x0b
		/*sprintf(arrayz,"%x %x",last_byte);transmit_string_UART0(arrayz);
		transmit_UART0('\r');*/
	}
   pos++;
 292:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 296:	8f 5f       	subi	r24, 0xFF	; 255
 298:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
  }  //ch2*/
     if(pos==12)
 29c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2a0:	8c 30       	cpi	r24, 0x0C	; 12
 2a2:	09 f0       	breq	.+2      	; 0x2a6 <__vector_18+0x1b6>
 2a4:	73 c0       	rjmp	.+230    	; 0x38c <__vector_18+0x29c>
         {
		  pos = 0xFF;
 2a6:	8f ef       	ldi	r24, 0xFF	; 255
 2a8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		  sprintf(arrayx,"%x %x",Current_state.gps.x);transmit_string_UART0(arrayx);
 2ac:	01 ea       	ldi	r16, 0xA1	; 161
 2ae:	11 e0       	ldi	r17, 0x01	; 1
 2b0:	f8 01       	movw	r30, r16
 2b2:	80 81       	ld	r24, Z
 2b4:	91 81       	ldd	r25, Z+1	; 0x01
 2b6:	a2 81       	ldd	r26, Z+2	; 0x02
 2b8:	b3 81       	ldd	r27, Z+3	; 0x03
 2ba:	bf 93       	push	r27
 2bc:	af 93       	push	r26
 2be:	9f 93       	push	r25
 2c0:	8f 93       	push	r24
 2c2:	0f 2e       	mov	r0, r31
 2c4:	f1 e0       	ldi	r31, 0x01	; 1
 2c6:	ef 2e       	mov	r14, r31
 2c8:	f1 e0       	ldi	r31, 0x01	; 1
 2ca:	ff 2e       	mov	r15, r31
 2cc:	f0 2d       	mov	r31, r0
 2ce:	ff 92       	push	r15
 2d0:	ef 92       	push	r14
 2d2:	6e 01       	movw	r12, r28
 2d4:	f1 e5       	ldi	r31, 0x51	; 81
 2d6:	cf 0e       	add	r12, r31
 2d8:	d1 1c       	adc	r13, r1
 2da:	df 92       	push	r13
 2dc:	cf 92       	push	r12
 2de:	0e 94 dd 02 	call	0x5ba	; 0x5ba <sprintf>
 2e2:	c6 01       	movw	r24, r12
 2e4:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <transmit_string_UART0>
		  transmit_UART0('\r');
 2e8:	8d e0       	ldi	r24, 0x0D	; 13
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	0e 94 cd 02 	call	0x59a	; 0x59a <transmit_UART0>
		  sprintf(arrayy,"%x %x",Current_state.gps.y);transmit_string_UART0(arrayy);
 2f0:	f8 01       	movw	r30, r16
 2f2:	84 81       	ldd	r24, Z+4	; 0x04
 2f4:	95 81       	ldd	r25, Z+5	; 0x05
 2f6:	a6 81       	ldd	r26, Z+6	; 0x06
 2f8:	b7 81       	ldd	r27, Z+7	; 0x07
 2fa:	bf 93       	push	r27
 2fc:	af 93       	push	r26
 2fe:	9f 93       	push	r25
 300:	8f 93       	push	r24
 302:	ff 92       	push	r15
 304:	ef 92       	push	r14
 306:	6e 01       	movw	r12, r28
 308:	f9 e2       	ldi	r31, 0x29	; 41
 30a:	cf 0e       	add	r12, r31
 30c:	d1 1c       	adc	r13, r1
 30e:	df 92       	push	r13
 310:	cf 92       	push	r12
 312:	0e 94 dd 02 	call	0x5ba	; 0x5ba <sprintf>
 316:	c6 01       	movw	r24, r12
 318:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <transmit_string_UART0>
		  transmit_UART0('\r');
 31c:	8d e0       	ldi	r24, 0x0D	; 13
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	0e 94 cd 02 	call	0x59a	; 0x59a <transmit_UART0>
		  sprintf(arrayz,"%x %x",Current_state.gps.z);transmit_string_UART0(arrayz);
 324:	f8 01       	movw	r30, r16
 326:	80 85       	ldd	r24, Z+8	; 0x08
 328:	91 85       	ldd	r25, Z+9	; 0x09
 32a:	a2 85       	ldd	r26, Z+10	; 0x0a
 32c:	b3 85       	ldd	r27, Z+11	; 0x0b
 32e:	bf 93       	push	r27
 330:	af 93       	push	r26
 332:	9f 93       	push	r25
 334:	8f 93       	push	r24
 336:	ff 92       	push	r15
 338:	ef 92       	push	r14
 33a:	7e 01       	movw	r14, r28
 33c:	f9 e7       	ldi	r31, 0x79	; 121
 33e:	ef 0e       	add	r14, r31
 340:	f1 1c       	adc	r15, r1
 342:	ff 92       	push	r15
 344:	ef 92       	push	r14
 346:	0e 94 dd 02 	call	0x5ba	; 0x5ba <sprintf>
 34a:	c7 01       	movw	r24, r14
 34c:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <transmit_string_UART0>
		  transmit_UART0('\r');
 350:	8d e0       	ldi	r24, 0x0D	; 13
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	0e 94 cd 02 	call	0x59a	; 0x59a <transmit_UART0>
		  Current_state.gps.x=0;
 358:	f8 01       	movw	r30, r16
 35a:	10 82       	st	Z, r1
 35c:	11 82       	std	Z+1, r1	; 0x01
 35e:	12 82       	std	Z+2, r1	; 0x02
 360:	13 82       	std	Z+3, r1	; 0x03
		  Current_state.gps.y=0;
 362:	14 82       	std	Z+4, r1	; 0x04
 364:	15 82       	std	Z+5, r1	; 0x05
 366:	16 82       	std	Z+6, r1	; 0x06
 368:	17 82       	std	Z+7, r1	; 0x07
		  Current_state.gps.z=0;
 36a:	10 86       	std	Z+8, r1	; 0x08
 36c:	11 86       	std	Z+9, r1	; 0x09
 36e:	12 86       	std	Z+10, r1	; 0x0a
 370:	13 86       	std	Z+11, r1	; 0x0b
		  buffer=0;
 372:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <buffer>
 376:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <buffer+0x1>
 37a:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <buffer+0x2>
 37e:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <buffer+0x3>
 382:	0f b6       	in	r0, 0x3f	; 63
 384:	f8 94       	cli
 386:	de bf       	out	0x3e, r29	; 62
 388:	0f be       	out	0x3f, r0	; 63
 38a:	cd bf       	out	0x3d, r28	; 61
    }
  }
  */
  ///Check the buffer against message ID's
  ///Position
  if(buffer == 0x3F3F04AC)
 38c:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <buffer>
 390:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <buffer+0x1>
 394:	a0 91 72 01 	lds	r26, 0x0172	; 0x800172 <buffer+0x2>
 398:	b0 91 73 01 	lds	r27, 0x0173	; 0x800173 <buffer+0x3>
 39c:	8c 3a       	cpi	r24, 0xAC	; 172
 39e:	94 40       	sbci	r25, 0x04	; 4
 3a0:	af 43       	sbci	r26, 0x3F	; 63
 3a2:	bf 43       	sbci	r27, 0x3F	; 63
 3a4:	39 f5       	brne	.+78     	; 0x3f4 <__vector_18+0x304>
  {
	sprintf(array,"%x %x",buffer);
 3a6:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <buffer>
 3aa:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <buffer+0x1>
 3ae:	a0 91 72 01 	lds	r26, 0x0172	; 0x800172 <buffer+0x2>
 3b2:	b0 91 73 01 	lds	r27, 0x0173	; 0x800173 <buffer+0x3>
 3b6:	bf 93       	push	r27
 3b8:	af 93       	push	r26
 3ba:	9f 93       	push	r25
 3bc:	8f 93       	push	r24
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	91 e0       	ldi	r25, 0x01	; 1
 3c2:	9f 93       	push	r25
 3c4:	8f 93       	push	r24
 3c6:	8e 01       	movw	r16, r28
 3c8:	0f 5f       	subi	r16, 0xFF	; 255
 3ca:	1f 4f       	sbci	r17, 0xFF	; 255
 3cc:	1f 93       	push	r17
 3ce:	0f 93       	push	r16
 3d0:	0e 94 dd 02 	call	0x5ba	; 0x5ba <sprintf>
	transmit_string_UART0(array);
 3d4:	c8 01       	movw	r24, r16
 3d6:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <transmit_string_UART0>
	transmit_UART0('\r');
 3da:	8d e0       	ldi	r24, 0x0D	; 13
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	0e 94 cd 02 	call	0x59a	; 0x59a <transmit_UART0>
    message_end = 0;
 3e2:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <__data_end>
    pos = 0;
 3e6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
 3ea:	0f b6       	in	r0, 0x3f	; 63
 3ec:	f8 94       	cli
 3ee:	de bf       	out	0x3e, r29	; 62
 3f0:	0f be       	out	0x3f, r0	; 63
 3f2:	cd bf       	out	0x3d, r28	; 61
    pdop = 0xFFFF;
    message_end = 0;
    buffer = 0;
  }*/
  return 0;//ch1
}
 3f4:	c0 56       	subi	r28, 0x60	; 96
 3f6:	df 4f       	sbci	r29, 0xFF	; 255
 3f8:	0f b6       	in	r0, 0x3f	; 63
 3fa:	f8 94       	cli
 3fc:	de bf       	out	0x3e, r29	; 62
 3fe:	0f be       	out	0x3f, r0	; 63
 400:	cd bf       	out	0x3d, r28	; 61
 402:	df 91       	pop	r29
 404:	cf 91       	pop	r28
 406:	ff 91       	pop	r31
 408:	ef 91       	pop	r30
 40a:	bf 91       	pop	r27
 40c:	af 91       	pop	r26
 40e:	9f 91       	pop	r25
 410:	8f 91       	pop	r24
 412:	7f 91       	pop	r23
 414:	6f 91       	pop	r22
 416:	5f 91       	pop	r21
 418:	4f 91       	pop	r20
 41a:	3f 91       	pop	r19
 41c:	2f 91       	pop	r18
 41e:	1f 91       	pop	r17
 420:	0f 91       	pop	r16
 422:	ff 90       	pop	r15
 424:	ef 90       	pop	r14
 426:	df 90       	pop	r13
 428:	cf 90       	pop	r12
 42a:	0f 90       	pop	r0
 42c:	0b be       	out	0x3b, r0	; 59
 42e:	0f 90       	pop	r0
 430:	0f be       	out	0x3f, r0	; 63
 432:	0f 90       	pop	r0
 434:	1f 90       	pop	r1
 436:	18 95       	reti

00000438 <main>:

/************************************************************/
/*				Main begins									*/
/************************************************************/
int main(void)
{
 438:	cf 93       	push	r28
 43a:	df 93       	push	r29
 43c:	cd b7       	in	r28, 0x3d	; 61
 43e:	de b7       	in	r29, 0x3e	; 62
 440:	c8 57       	subi	r28, 0x78	; 120
 442:	d1 09       	sbc	r29, r1
 444:	0f b6       	in	r0, 0x3f	; 63
 446:	f8 94       	cli
 448:	de bf       	out	0x3e, r29	; 62
 44a:	0f be       	out	0x3f, r0	; 63
 44c:	cd bf       	out	0x3d, r28	; 61
	    Current_state.gps.minutes = 1;
	    Current_state.gps.month = 1;
	    Current_state.gps.seconds = 1;
	    Current_state.gps.time_since_reading = 1;
*/
	DDRA = 0xF0;
 44e:	80 ef       	ldi	r24, 0xF0	; 240
 450:	8a bb       	out	0x1a, r24	; 26
	PORTA = 0xF0;
 452:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 454:	2f ef       	ldi	r18, 0xFF	; 255
 456:	39 e6       	ldi	r19, 0x69	; 105
 458:	98 e1       	ldi	r25, 0x18	; 24
 45a:	21 50       	subi	r18, 0x01	; 1
 45c:	30 40       	sbci	r19, 0x00	; 0
 45e:	90 40       	sbci	r25, 0x00	; 0
 460:	e1 f7       	brne	.-8      	; 0x45a <main+0x22>
 462:	00 c0       	rjmp	.+0      	; 0x464 <main+0x2c>
 464:	00 00       	nop
	_delay_ms(1000);
	PORTA = 0x00;
 466:	1b ba       	out	0x1b, r1	; 27
 468:	2f ef       	ldi	r18, 0xFF	; 255
 46a:	39 e6       	ldi	r19, 0x69	; 105
 46c:	98 e1       	ldi	r25, 0x18	; 24
 46e:	21 50       	subi	r18, 0x01	; 1
 470:	30 40       	sbci	r19, 0x00	; 0
 472:	90 40       	sbci	r25, 0x00	; 0
 474:	e1 f7       	brne	.-8      	; 0x46e <main+0x36>
 476:	00 c0       	rjmp	.+0      	; 0x478 <main+0x40>
 478:	00 00       	nop
	_delay_ms(1000);
	PORTA = 0xF0;
 47a:	8b bb       	out	0x1b, r24	; 27
 47c:	2f ef       	ldi	r18, 0xFF	; 255
 47e:	39 e6       	ldi	r19, 0x69	; 105
 480:	88 e1       	ldi	r24, 0x18	; 24
 482:	21 50       	subi	r18, 0x01	; 1
 484:	30 40       	sbci	r19, 0x00	; 0
 486:	80 40       	sbci	r24, 0x00	; 0
 488:	e1 f7       	brne	.-8      	; 0x482 <main+0x4a>
 48a:	00 c0       	rjmp	.+0      	; 0x48c <main+0x54>
 48c:	00 00       	nop
	_delay_ms(1000);
	PORTA = 0x00;
 48e:	1b ba       	out	0x1b, r1	; 27
 490:	9f ef       	ldi	r25, 0xFF	; 255
 492:	29 e6       	ldi	r18, 0x69	; 105
 494:	38 e1       	ldi	r19, 0x18	; 24
 496:	91 50       	subi	r25, 0x01	; 1
 498:	20 40       	sbci	r18, 0x00	; 0
 49a:	30 40       	sbci	r19, 0x00	; 0
 49c:	e1 f7       	brne	.-8      	; 0x496 <main+0x5e>
 49e:	00 c0       	rjmp	.+0      	; 0x4a0 <main+0x68>
 4a0:	00 00       	nop
	_delay_ms(1000);
	
	init_UART0();
 4a2:	0e 94 bc 02 	call	0x578	; 0x578 <init_UART0>
  
	transmit_UART0('\r');
 4a6:	8d e0       	ldi	r24, 0x0D	; 13
 4a8:	0e 94 cd 02 	call	0x59a	; 0x59a <transmit_UART0>
	transmit_UART0('\r');
 4ac:	8d e0       	ldi	r24, 0x0D	; 13
 4ae:	0e 94 cd 02 	call	0x59a	; 0x59a <transmit_UART0>
	transmit_UART0('H');
 4b2:	88 e4       	ldi	r24, 0x48	; 72
 4b4:	0e 94 cd 02 	call	0x59a	; 0x59a <transmit_UART0>
	transmit_UART0('e');
 4b8:	85 e6       	ldi	r24, 0x65	; 101
 4ba:	0e 94 cd 02 	call	0x59a	; 0x59a <transmit_UART0>
	transmit_UART0('l');
 4be:	8c e6       	ldi	r24, 0x6C	; 108
 4c0:	0e 94 cd 02 	call	0x59a	; 0x59a <transmit_UART0>
	transmit_UART0('l');
 4c4:	8c e6       	ldi	r24, 0x6C	; 108
 4c6:	0e 94 cd 02 	call	0x59a	; 0x59a <transmit_UART0>
	transmit_UART0('o');
 4ca:	8f e6       	ldi	r24, 0x6F	; 111
 4cc:	0e 94 cd 02 	call	0x59a	; 0x59a <transmit_UART0>
	
	sprintf(array,"\t..This is IITB's Student Satellite...\r");
 4d0:	88 e2       	ldi	r24, 0x28	; 40
 4d2:	e6 e4       	ldi	r30, 0x46	; 70
 4d4:	f1 e0       	ldi	r31, 0x01	; 1
 4d6:	de 01       	movw	r26, r28
 4d8:	11 96       	adiw	r26, 0x01	; 1
 4da:	01 90       	ld	r0, Z+
 4dc:	0d 92       	st	X+, r0
 4de:	8a 95       	dec	r24
 4e0:	e1 f7       	brne	.-8      	; 0x4da <main+0xa2>
	transmit_string_UART0(array);
 4e2:	ce 01       	movw	r24, r28
 4e4:	01 96       	adiw	r24, 0x01	; 1
 4e6:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <transmit_string_UART0>

	sprintf(array1,"\tThis is HUSSAIN's OBC-Master code...");
 4ea:	86 e2       	ldi	r24, 0x26	; 38
 4ec:	e7 e0       	ldi	r30, 0x07	; 7
 4ee:	f1 e0       	ldi	r31, 0x01	; 1
 4f0:	de 01       	movw	r26, r28
 4f2:	99 96       	adiw	r26, 0x29	; 41
 4f4:	01 90       	ld	r0, Z+
 4f6:	0d 92       	st	X+, r0
 4f8:	8a 95       	dec	r24
 4fa:	e1 f7       	brne	.-8      	; 0x4f4 <main+0xbc>
	sprintf(array2,"\rCurrent GPS state is =\t");
 4fc:	89 e1       	ldi	r24, 0x19	; 25
 4fe:	ed e2       	ldi	r30, 0x2D	; 45
 500:	f1 e0       	ldi	r31, 0x01	; 1
 502:	de 01       	movw	r26, r28
 504:	af 5a       	subi	r26, 0xAF	; 175
 506:	bf 4f       	sbci	r27, 0xFF	; 255
 508:	01 90       	ld	r0, Z+
 50a:	0d 92       	st	X+, r0
 50c:	8a 95       	dec	r24
 50e:	e1 f7       	brne	.-8      	; 0x508 <main+0xd0>
		
/************************************************************/
	init_UART_GPS();
 510:	0e 94 67 00 	call	0xce	; 0xce <init_UART_GPS>
	
	///* Switch on Global interrupts
	sei();
 514:	78 94       	sei
  
/************************************************************/
	while(1){
	PORTA = 0xA0;
 516:	00 ea       	ldi	r16, 0xA0	; 160
	_delay_ms(500);
	PORTA = 0x50;
 518:	10 e5       	ldi	r17, 0x50	; 80
	///* Switch on Global interrupts
	sei();
  
/************************************************************/
	while(1){
	PORTA = 0xA0;
 51a:	0b bb       	out	0x1b, r16	; 27
 51c:	8f ef       	ldi	r24, 0xFF	; 255
 51e:	94 e3       	ldi	r25, 0x34	; 52
 520:	2c e0       	ldi	r18, 0x0C	; 12
 522:	81 50       	subi	r24, 0x01	; 1
 524:	90 40       	sbci	r25, 0x00	; 0
 526:	20 40       	sbci	r18, 0x00	; 0
 528:	e1 f7       	brne	.-8      	; 0x522 <main+0xea>
 52a:	00 c0       	rjmp	.+0      	; 0x52c <main+0xf4>
 52c:	00 00       	nop
	_delay_ms(500);
	PORTA = 0x50;
 52e:	1b bb       	out	0x1b, r17	; 27
 530:	3f ef       	ldi	r19, 0xFF	; 255
 532:	84 e3       	ldi	r24, 0x34	; 52
 534:	9c e0       	ldi	r25, 0x0C	; 12
 536:	31 50       	subi	r19, 0x01	; 1
 538:	80 40       	sbci	r24, 0x00	; 0
 53a:	90 40       	sbci	r25, 0x00	; 0
 53c:	e1 f7       	brne	.-8      	; 0x536 <main+0xfe>
 53e:	00 c0       	rjmp	.+0      	; 0x540 <main+0x108>
 540:	00 00       	nop
	
	transmit_string_UART0(array1);
	transmit_string_UART0(array2);
	
/************************************************************/
	PORTA = 0xA0;
 542:	0b bb       	out	0x1b, r16	; 27
 544:	2f ef       	ldi	r18, 0xFF	; 255
 546:	34 e3       	ldi	r19, 0x34	; 52
 548:	8c e0       	ldi	r24, 0x0C	; 12
 54a:	21 50       	subi	r18, 0x01	; 1
 54c:	30 40       	sbci	r19, 0x00	; 0
 54e:	80 40       	sbci	r24, 0x00	; 0
 550:	e1 f7       	brne	.-8      	; 0x54a <main+0x112>
 552:	00 c0       	rjmp	.+0      	; 0x554 <main+0x11c>
 554:	00 00       	nop
	_delay_ms(500);
	PORTA = 0x50;
 556:	1b bb       	out	0x1b, r17	; 27
 558:	9f ef       	ldi	r25, 0xFF	; 255
 55a:	24 e3       	ldi	r18, 0x34	; 52
 55c:	3c e0       	ldi	r19, 0x0C	; 12
 55e:	91 50       	subi	r25, 0x01	; 1
 560:	20 40       	sbci	r18, 0x00	; 0
 562:	30 40       	sbci	r19, 0x00	; 0
 564:	e1 f7       	brne	.-8      	; 0x55e <main+0x126>
 566:	00 c0       	rjmp	.+0      	; 0x568 <main+0x130>
 568:	00 00       	nop
	_delay_ms(500);
	
	///* * Reading GPS
    read_GPS();
 56a:	0e 94 ba 02 	call	0x574	; 0x574 <read_GPS>
    while(UCSR0B & _BV(RXCIE0));
 56e:	57 99       	sbic	0x0a, 7	; 10
 570:	fe cf       	rjmp	.-4      	; 0x56e <main+0x136>
 572:	d3 cf       	rjmp	.-90     	; 0x51a <main+0xe2>

00000574 <read_GPS>:
  send_loads();
}

void read_GPS(void){
  ///* Switch on the GPS interrupt
  UCSR0B |= _BV(RXCIE0);
 574:	57 9a       	sbi	0x0a, 7	; 10
 576:	08 95       	ret

00000578 <init_UART0>:
    	while ( !(UCSR1A & (_BV(UDRE1))) );
    	///* Start transmission
    	UDR1 = buffer[i];
		i++;	
	}
}
 578:	1b b8       	out	0x0b, r1	; 11
 57a:	1a b8       	out	0x0a, r1	; 10
 57c:	e5 e9       	ldi	r30, 0x95	; 149
 57e:	f0 e0       	ldi	r31, 0x00	; 0
 580:	10 82       	st	Z, r1
 582:	59 9a       	sbi	0x0b, 1	; 11
 584:	8a b1       	in	r24, 0x0a	; 10
 586:	88 61       	ori	r24, 0x18	; 24
 588:	8a b9       	out	0x0a, r24	; 10
 58a:	80 81       	ld	r24, Z
 58c:	8e 60       	ori	r24, 0x0E	; 14
 58e:	80 83       	st	Z, r24
 590:	87 e6       	ldi	r24, 0x67	; 103
 592:	89 b9       	out	0x09, r24	; 9
 594:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 598:	08 95       	ret

0000059a <transmit_UART0>:
 59a:	5d 9b       	sbis	0x0b, 5	; 11
 59c:	fe cf       	rjmp	.-4      	; 0x59a <transmit_UART0>
 59e:	8c b9       	out	0x0c, r24	; 12
 5a0:	08 95       	ret

000005a2 <transmit_string_UART0>:

void transmit_string_UART0(char *buffer)
{
 5a2:	fc 01       	movw	r30, r24
  	uint16_t i = 0;
  	///Loop through the data
  	while(buffer[i] != '\0')
 5a4:	90 81       	ld	r25, Z
 5a6:	99 23       	and	r25, r25
 5a8:	39 f0       	breq	.+14     	; 0x5b8 <transmit_string_UART0+0x16>
 5aa:	31 96       	adiw	r30, 0x01	; 1
  	{
    	///* Wait for empty transmit buffer 
    	while ( !(UCSR0A & (_BV(UDRE0))) );
 5ac:	5d 9b       	sbis	0x0b, 5	; 11
 5ae:	fe cf       	rjmp	.-4      	; 0x5ac <transmit_string_UART0+0xa>
    	///* Start transmission
    	UDR0 = buffer[i];
 5b0:	9c b9       	out	0x0c, r25	; 12

void transmit_string_UART0(char *buffer)
{
  	uint16_t i = 0;
  	///Loop through the data
  	while(buffer[i] != '\0')
 5b2:	91 91       	ld	r25, Z+
 5b4:	91 11       	cpse	r25, r1
 5b6:	fa cf       	rjmp	.-12     	; 0x5ac <transmit_string_UART0+0xa>
 5b8:	08 95       	ret

000005ba <sprintf>:
 5ba:	0f 93       	push	r16
 5bc:	1f 93       	push	r17
 5be:	cf 93       	push	r28
 5c0:	df 93       	push	r29
 5c2:	cd b7       	in	r28, 0x3d	; 61
 5c4:	de b7       	in	r29, 0x3e	; 62
 5c6:	2e 97       	sbiw	r28, 0x0e	; 14
 5c8:	0f b6       	in	r0, 0x3f	; 63
 5ca:	f8 94       	cli
 5cc:	de bf       	out	0x3e, r29	; 62
 5ce:	0f be       	out	0x3f, r0	; 63
 5d0:	cd bf       	out	0x3d, r28	; 61
 5d2:	0d 89       	ldd	r16, Y+21	; 0x15
 5d4:	1e 89       	ldd	r17, Y+22	; 0x16
 5d6:	86 e0       	ldi	r24, 0x06	; 6
 5d8:	8c 83       	std	Y+4, r24	; 0x04
 5da:	1a 83       	std	Y+2, r17	; 0x02
 5dc:	09 83       	std	Y+1, r16	; 0x01
 5de:	8f ef       	ldi	r24, 0xFF	; 255
 5e0:	9f e7       	ldi	r25, 0x7F	; 127
 5e2:	9e 83       	std	Y+6, r25	; 0x06
 5e4:	8d 83       	std	Y+5, r24	; 0x05
 5e6:	ae 01       	movw	r20, r28
 5e8:	47 5e       	subi	r20, 0xE7	; 231
 5ea:	5f 4f       	sbci	r21, 0xFF	; 255
 5ec:	6f 89       	ldd	r22, Y+23	; 0x17
 5ee:	78 8d       	ldd	r23, Y+24	; 0x18
 5f0:	ce 01       	movw	r24, r28
 5f2:	01 96       	adiw	r24, 0x01	; 1
 5f4:	0e 94 0d 03 	call	0x61a	; 0x61a <vfprintf>
 5f8:	2f 81       	ldd	r18, Y+7	; 0x07
 5fa:	38 85       	ldd	r19, Y+8	; 0x08
 5fc:	f8 01       	movw	r30, r16
 5fe:	e2 0f       	add	r30, r18
 600:	f3 1f       	adc	r31, r19
 602:	10 82       	st	Z, r1
 604:	2e 96       	adiw	r28, 0x0e	; 14
 606:	0f b6       	in	r0, 0x3f	; 63
 608:	f8 94       	cli
 60a:	de bf       	out	0x3e, r29	; 62
 60c:	0f be       	out	0x3f, r0	; 63
 60e:	cd bf       	out	0x3d, r28	; 61
 610:	df 91       	pop	r29
 612:	cf 91       	pop	r28
 614:	1f 91       	pop	r17
 616:	0f 91       	pop	r16
 618:	08 95       	ret

0000061a <vfprintf>:
 61a:	2f 92       	push	r2
 61c:	3f 92       	push	r3
 61e:	4f 92       	push	r4
 620:	5f 92       	push	r5
 622:	6f 92       	push	r6
 624:	7f 92       	push	r7
 626:	8f 92       	push	r8
 628:	9f 92       	push	r9
 62a:	af 92       	push	r10
 62c:	bf 92       	push	r11
 62e:	cf 92       	push	r12
 630:	df 92       	push	r13
 632:	ef 92       	push	r14
 634:	ff 92       	push	r15
 636:	0f 93       	push	r16
 638:	1f 93       	push	r17
 63a:	cf 93       	push	r28
 63c:	df 93       	push	r29
 63e:	cd b7       	in	r28, 0x3d	; 61
 640:	de b7       	in	r29, 0x3e	; 62
 642:	2c 97       	sbiw	r28, 0x0c	; 12
 644:	0f b6       	in	r0, 0x3f	; 63
 646:	f8 94       	cli
 648:	de bf       	out	0x3e, r29	; 62
 64a:	0f be       	out	0x3f, r0	; 63
 64c:	cd bf       	out	0x3d, r28	; 61
 64e:	7c 01       	movw	r14, r24
 650:	6b 01       	movw	r12, r22
 652:	8a 01       	movw	r16, r20
 654:	fc 01       	movw	r30, r24
 656:	17 82       	std	Z+7, r1	; 0x07
 658:	16 82       	std	Z+6, r1	; 0x06
 65a:	83 81       	ldd	r24, Z+3	; 0x03
 65c:	81 ff       	sbrs	r24, 1
 65e:	bd c1       	rjmp	.+890    	; 0x9da <vfprintf+0x3c0>
 660:	ce 01       	movw	r24, r28
 662:	01 96       	adiw	r24, 0x01	; 1
 664:	4c 01       	movw	r8, r24
 666:	f7 01       	movw	r30, r14
 668:	93 81       	ldd	r25, Z+3	; 0x03
 66a:	f6 01       	movw	r30, r12
 66c:	93 fd       	sbrc	r25, 3
 66e:	85 91       	lpm	r24, Z+
 670:	93 ff       	sbrs	r25, 3
 672:	81 91       	ld	r24, Z+
 674:	6f 01       	movw	r12, r30
 676:	88 23       	and	r24, r24
 678:	09 f4       	brne	.+2      	; 0x67c <vfprintf+0x62>
 67a:	ab c1       	rjmp	.+854    	; 0x9d2 <vfprintf+0x3b8>
 67c:	85 32       	cpi	r24, 0x25	; 37
 67e:	39 f4       	brne	.+14     	; 0x68e <vfprintf+0x74>
 680:	93 fd       	sbrc	r25, 3
 682:	85 91       	lpm	r24, Z+
 684:	93 ff       	sbrs	r25, 3
 686:	81 91       	ld	r24, Z+
 688:	6f 01       	movw	r12, r30
 68a:	85 32       	cpi	r24, 0x25	; 37
 68c:	29 f4       	brne	.+10     	; 0x698 <vfprintf+0x7e>
 68e:	b7 01       	movw	r22, r14
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	0e 94 1e 05 	call	0xa3c	; 0xa3c <fputc>
 696:	e7 cf       	rjmp	.-50     	; 0x666 <vfprintf+0x4c>
 698:	51 2c       	mov	r5, r1
 69a:	31 2c       	mov	r3, r1
 69c:	20 e0       	ldi	r18, 0x00	; 0
 69e:	20 32       	cpi	r18, 0x20	; 32
 6a0:	a0 f4       	brcc	.+40     	; 0x6ca <vfprintf+0xb0>
 6a2:	8b 32       	cpi	r24, 0x2B	; 43
 6a4:	69 f0       	breq	.+26     	; 0x6c0 <vfprintf+0xa6>
 6a6:	30 f4       	brcc	.+12     	; 0x6b4 <vfprintf+0x9a>
 6a8:	80 32       	cpi	r24, 0x20	; 32
 6aa:	59 f0       	breq	.+22     	; 0x6c2 <vfprintf+0xa8>
 6ac:	83 32       	cpi	r24, 0x23	; 35
 6ae:	69 f4       	brne	.+26     	; 0x6ca <vfprintf+0xb0>
 6b0:	20 61       	ori	r18, 0x10	; 16
 6b2:	2c c0       	rjmp	.+88     	; 0x70c <vfprintf+0xf2>
 6b4:	8d 32       	cpi	r24, 0x2D	; 45
 6b6:	39 f0       	breq	.+14     	; 0x6c6 <vfprintf+0xac>
 6b8:	80 33       	cpi	r24, 0x30	; 48
 6ba:	39 f4       	brne	.+14     	; 0x6ca <vfprintf+0xb0>
 6bc:	21 60       	ori	r18, 0x01	; 1
 6be:	26 c0       	rjmp	.+76     	; 0x70c <vfprintf+0xf2>
 6c0:	22 60       	ori	r18, 0x02	; 2
 6c2:	24 60       	ori	r18, 0x04	; 4
 6c4:	23 c0       	rjmp	.+70     	; 0x70c <vfprintf+0xf2>
 6c6:	28 60       	ori	r18, 0x08	; 8
 6c8:	21 c0       	rjmp	.+66     	; 0x70c <vfprintf+0xf2>
 6ca:	27 fd       	sbrc	r18, 7
 6cc:	27 c0       	rjmp	.+78     	; 0x71c <vfprintf+0x102>
 6ce:	30 ed       	ldi	r19, 0xD0	; 208
 6d0:	38 0f       	add	r19, r24
 6d2:	3a 30       	cpi	r19, 0x0A	; 10
 6d4:	78 f4       	brcc	.+30     	; 0x6f4 <vfprintf+0xda>
 6d6:	26 ff       	sbrs	r18, 6
 6d8:	06 c0       	rjmp	.+12     	; 0x6e6 <vfprintf+0xcc>
 6da:	fa e0       	ldi	r31, 0x0A	; 10
 6dc:	5f 9e       	mul	r5, r31
 6de:	30 0d       	add	r19, r0
 6e0:	11 24       	eor	r1, r1
 6e2:	53 2e       	mov	r5, r19
 6e4:	13 c0       	rjmp	.+38     	; 0x70c <vfprintf+0xf2>
 6e6:	8a e0       	ldi	r24, 0x0A	; 10
 6e8:	38 9e       	mul	r3, r24
 6ea:	30 0d       	add	r19, r0
 6ec:	11 24       	eor	r1, r1
 6ee:	33 2e       	mov	r3, r19
 6f0:	20 62       	ori	r18, 0x20	; 32
 6f2:	0c c0       	rjmp	.+24     	; 0x70c <vfprintf+0xf2>
 6f4:	8e 32       	cpi	r24, 0x2E	; 46
 6f6:	21 f4       	brne	.+8      	; 0x700 <vfprintf+0xe6>
 6f8:	26 fd       	sbrc	r18, 6
 6fa:	6b c1       	rjmp	.+726    	; 0x9d2 <vfprintf+0x3b8>
 6fc:	20 64       	ori	r18, 0x40	; 64
 6fe:	06 c0       	rjmp	.+12     	; 0x70c <vfprintf+0xf2>
 700:	8c 36       	cpi	r24, 0x6C	; 108
 702:	11 f4       	brne	.+4      	; 0x708 <vfprintf+0xee>
 704:	20 68       	ori	r18, 0x80	; 128
 706:	02 c0       	rjmp	.+4      	; 0x70c <vfprintf+0xf2>
 708:	88 36       	cpi	r24, 0x68	; 104
 70a:	41 f4       	brne	.+16     	; 0x71c <vfprintf+0x102>
 70c:	f6 01       	movw	r30, r12
 70e:	93 fd       	sbrc	r25, 3
 710:	85 91       	lpm	r24, Z+
 712:	93 ff       	sbrs	r25, 3
 714:	81 91       	ld	r24, Z+
 716:	6f 01       	movw	r12, r30
 718:	81 11       	cpse	r24, r1
 71a:	c1 cf       	rjmp	.-126    	; 0x69e <vfprintf+0x84>
 71c:	98 2f       	mov	r25, r24
 71e:	9f 7d       	andi	r25, 0xDF	; 223
 720:	95 54       	subi	r25, 0x45	; 69
 722:	93 30       	cpi	r25, 0x03	; 3
 724:	28 f4       	brcc	.+10     	; 0x730 <vfprintf+0x116>
 726:	0c 5f       	subi	r16, 0xFC	; 252
 728:	1f 4f       	sbci	r17, 0xFF	; 255
 72a:	ff e3       	ldi	r31, 0x3F	; 63
 72c:	f9 83       	std	Y+1, r31	; 0x01
 72e:	0d c0       	rjmp	.+26     	; 0x74a <vfprintf+0x130>
 730:	83 36       	cpi	r24, 0x63	; 99
 732:	31 f0       	breq	.+12     	; 0x740 <vfprintf+0x126>
 734:	83 37       	cpi	r24, 0x73	; 115
 736:	71 f0       	breq	.+28     	; 0x754 <vfprintf+0x13a>
 738:	83 35       	cpi	r24, 0x53	; 83
 73a:	09 f0       	breq	.+2      	; 0x73e <vfprintf+0x124>
 73c:	5b c0       	rjmp	.+182    	; 0x7f4 <vfprintf+0x1da>
 73e:	22 c0       	rjmp	.+68     	; 0x784 <vfprintf+0x16a>
 740:	f8 01       	movw	r30, r16
 742:	80 81       	ld	r24, Z
 744:	89 83       	std	Y+1, r24	; 0x01
 746:	0e 5f       	subi	r16, 0xFE	; 254
 748:	1f 4f       	sbci	r17, 0xFF	; 255
 74a:	44 24       	eor	r4, r4
 74c:	43 94       	inc	r4
 74e:	51 2c       	mov	r5, r1
 750:	54 01       	movw	r10, r8
 752:	15 c0       	rjmp	.+42     	; 0x77e <vfprintf+0x164>
 754:	38 01       	movw	r6, r16
 756:	f2 e0       	ldi	r31, 0x02	; 2
 758:	6f 0e       	add	r6, r31
 75a:	71 1c       	adc	r7, r1
 75c:	f8 01       	movw	r30, r16
 75e:	a0 80       	ld	r10, Z
 760:	b1 80       	ldd	r11, Z+1	; 0x01
 762:	26 ff       	sbrs	r18, 6
 764:	03 c0       	rjmp	.+6      	; 0x76c <vfprintf+0x152>
 766:	65 2d       	mov	r22, r5
 768:	70 e0       	ldi	r23, 0x00	; 0
 76a:	02 c0       	rjmp	.+4      	; 0x770 <vfprintf+0x156>
 76c:	6f ef       	ldi	r22, 0xFF	; 255
 76e:	7f ef       	ldi	r23, 0xFF	; 255
 770:	c5 01       	movw	r24, r10
 772:	2c 87       	std	Y+12, r18	; 0x0c
 774:	0e 94 13 05 	call	0xa26	; 0xa26 <strnlen>
 778:	2c 01       	movw	r4, r24
 77a:	83 01       	movw	r16, r6
 77c:	2c 85       	ldd	r18, Y+12	; 0x0c
 77e:	2f 77       	andi	r18, 0x7F	; 127
 780:	22 2e       	mov	r2, r18
 782:	17 c0       	rjmp	.+46     	; 0x7b2 <vfprintf+0x198>
 784:	38 01       	movw	r6, r16
 786:	f2 e0       	ldi	r31, 0x02	; 2
 788:	6f 0e       	add	r6, r31
 78a:	71 1c       	adc	r7, r1
 78c:	f8 01       	movw	r30, r16
 78e:	a0 80       	ld	r10, Z
 790:	b1 80       	ldd	r11, Z+1	; 0x01
 792:	26 ff       	sbrs	r18, 6
 794:	03 c0       	rjmp	.+6      	; 0x79c <vfprintf+0x182>
 796:	65 2d       	mov	r22, r5
 798:	70 e0       	ldi	r23, 0x00	; 0
 79a:	02 c0       	rjmp	.+4      	; 0x7a0 <vfprintf+0x186>
 79c:	6f ef       	ldi	r22, 0xFF	; 255
 79e:	7f ef       	ldi	r23, 0xFF	; 255
 7a0:	c5 01       	movw	r24, r10
 7a2:	2c 87       	std	Y+12, r18	; 0x0c
 7a4:	0e 94 08 05 	call	0xa10	; 0xa10 <strnlen_P>
 7a8:	2c 01       	movw	r4, r24
 7aa:	2c 85       	ldd	r18, Y+12	; 0x0c
 7ac:	20 68       	ori	r18, 0x80	; 128
 7ae:	22 2e       	mov	r2, r18
 7b0:	83 01       	movw	r16, r6
 7b2:	23 fc       	sbrc	r2, 3
 7b4:	1b c0       	rjmp	.+54     	; 0x7ec <vfprintf+0x1d2>
 7b6:	83 2d       	mov	r24, r3
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	48 16       	cp	r4, r24
 7bc:	59 06       	cpc	r5, r25
 7be:	b0 f4       	brcc	.+44     	; 0x7ec <vfprintf+0x1d2>
 7c0:	b7 01       	movw	r22, r14
 7c2:	80 e2       	ldi	r24, 0x20	; 32
 7c4:	90 e0       	ldi	r25, 0x00	; 0
 7c6:	0e 94 1e 05 	call	0xa3c	; 0xa3c <fputc>
 7ca:	3a 94       	dec	r3
 7cc:	f4 cf       	rjmp	.-24     	; 0x7b6 <vfprintf+0x19c>
 7ce:	f5 01       	movw	r30, r10
 7d0:	27 fc       	sbrc	r2, 7
 7d2:	85 91       	lpm	r24, Z+
 7d4:	27 fe       	sbrs	r2, 7
 7d6:	81 91       	ld	r24, Z+
 7d8:	5f 01       	movw	r10, r30
 7da:	b7 01       	movw	r22, r14
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	0e 94 1e 05 	call	0xa3c	; 0xa3c <fputc>
 7e2:	31 10       	cpse	r3, r1
 7e4:	3a 94       	dec	r3
 7e6:	f1 e0       	ldi	r31, 0x01	; 1
 7e8:	4f 1a       	sub	r4, r31
 7ea:	51 08       	sbc	r5, r1
 7ec:	41 14       	cp	r4, r1
 7ee:	51 04       	cpc	r5, r1
 7f0:	71 f7       	brne	.-36     	; 0x7ce <vfprintf+0x1b4>
 7f2:	e5 c0       	rjmp	.+458    	; 0x9be <vfprintf+0x3a4>
 7f4:	84 36       	cpi	r24, 0x64	; 100
 7f6:	11 f0       	breq	.+4      	; 0x7fc <vfprintf+0x1e2>
 7f8:	89 36       	cpi	r24, 0x69	; 105
 7fa:	39 f5       	brne	.+78     	; 0x84a <vfprintf+0x230>
 7fc:	f8 01       	movw	r30, r16
 7fe:	27 ff       	sbrs	r18, 7
 800:	07 c0       	rjmp	.+14     	; 0x810 <vfprintf+0x1f6>
 802:	60 81       	ld	r22, Z
 804:	71 81       	ldd	r23, Z+1	; 0x01
 806:	82 81       	ldd	r24, Z+2	; 0x02
 808:	93 81       	ldd	r25, Z+3	; 0x03
 80a:	0c 5f       	subi	r16, 0xFC	; 252
 80c:	1f 4f       	sbci	r17, 0xFF	; 255
 80e:	08 c0       	rjmp	.+16     	; 0x820 <vfprintf+0x206>
 810:	60 81       	ld	r22, Z
 812:	71 81       	ldd	r23, Z+1	; 0x01
 814:	07 2e       	mov	r0, r23
 816:	00 0c       	add	r0, r0
 818:	88 0b       	sbc	r24, r24
 81a:	99 0b       	sbc	r25, r25
 81c:	0e 5f       	subi	r16, 0xFE	; 254
 81e:	1f 4f       	sbci	r17, 0xFF	; 255
 820:	2f 76       	andi	r18, 0x6F	; 111
 822:	72 2e       	mov	r7, r18
 824:	97 ff       	sbrs	r25, 7
 826:	09 c0       	rjmp	.+18     	; 0x83a <vfprintf+0x220>
 828:	90 95       	com	r25
 82a:	80 95       	com	r24
 82c:	70 95       	com	r23
 82e:	61 95       	neg	r22
 830:	7f 4f       	sbci	r23, 0xFF	; 255
 832:	8f 4f       	sbci	r24, 0xFF	; 255
 834:	9f 4f       	sbci	r25, 0xFF	; 255
 836:	20 68       	ori	r18, 0x80	; 128
 838:	72 2e       	mov	r7, r18
 83a:	2a e0       	ldi	r18, 0x0A	; 10
 83c:	30 e0       	ldi	r19, 0x00	; 0
 83e:	a4 01       	movw	r20, r8
 840:	0e 94 56 05 	call	0xaac	; 0xaac <__ultoa_invert>
 844:	a8 2e       	mov	r10, r24
 846:	a8 18       	sub	r10, r8
 848:	44 c0       	rjmp	.+136    	; 0x8d2 <vfprintf+0x2b8>
 84a:	85 37       	cpi	r24, 0x75	; 117
 84c:	29 f4       	brne	.+10     	; 0x858 <vfprintf+0x23e>
 84e:	2f 7e       	andi	r18, 0xEF	; 239
 850:	b2 2e       	mov	r11, r18
 852:	2a e0       	ldi	r18, 0x0A	; 10
 854:	30 e0       	ldi	r19, 0x00	; 0
 856:	25 c0       	rjmp	.+74     	; 0x8a2 <vfprintf+0x288>
 858:	f2 2f       	mov	r31, r18
 85a:	f9 7f       	andi	r31, 0xF9	; 249
 85c:	bf 2e       	mov	r11, r31
 85e:	8f 36       	cpi	r24, 0x6F	; 111
 860:	c1 f0       	breq	.+48     	; 0x892 <vfprintf+0x278>
 862:	18 f4       	brcc	.+6      	; 0x86a <vfprintf+0x250>
 864:	88 35       	cpi	r24, 0x58	; 88
 866:	79 f0       	breq	.+30     	; 0x886 <vfprintf+0x26c>
 868:	b4 c0       	rjmp	.+360    	; 0x9d2 <vfprintf+0x3b8>
 86a:	80 37       	cpi	r24, 0x70	; 112
 86c:	19 f0       	breq	.+6      	; 0x874 <vfprintf+0x25a>
 86e:	88 37       	cpi	r24, 0x78	; 120
 870:	21 f0       	breq	.+8      	; 0x87a <vfprintf+0x260>
 872:	af c0       	rjmp	.+350    	; 0x9d2 <vfprintf+0x3b8>
 874:	2f 2f       	mov	r18, r31
 876:	20 61       	ori	r18, 0x10	; 16
 878:	b2 2e       	mov	r11, r18
 87a:	b4 fe       	sbrs	r11, 4
 87c:	0d c0       	rjmp	.+26     	; 0x898 <vfprintf+0x27e>
 87e:	8b 2d       	mov	r24, r11
 880:	84 60       	ori	r24, 0x04	; 4
 882:	b8 2e       	mov	r11, r24
 884:	09 c0       	rjmp	.+18     	; 0x898 <vfprintf+0x27e>
 886:	24 ff       	sbrs	r18, 4
 888:	0a c0       	rjmp	.+20     	; 0x89e <vfprintf+0x284>
 88a:	9f 2f       	mov	r25, r31
 88c:	96 60       	ori	r25, 0x06	; 6
 88e:	b9 2e       	mov	r11, r25
 890:	06 c0       	rjmp	.+12     	; 0x89e <vfprintf+0x284>
 892:	28 e0       	ldi	r18, 0x08	; 8
 894:	30 e0       	ldi	r19, 0x00	; 0
 896:	05 c0       	rjmp	.+10     	; 0x8a2 <vfprintf+0x288>
 898:	20 e1       	ldi	r18, 0x10	; 16
 89a:	30 e0       	ldi	r19, 0x00	; 0
 89c:	02 c0       	rjmp	.+4      	; 0x8a2 <vfprintf+0x288>
 89e:	20 e1       	ldi	r18, 0x10	; 16
 8a0:	32 e0       	ldi	r19, 0x02	; 2
 8a2:	f8 01       	movw	r30, r16
 8a4:	b7 fe       	sbrs	r11, 7
 8a6:	07 c0       	rjmp	.+14     	; 0x8b6 <vfprintf+0x29c>
 8a8:	60 81       	ld	r22, Z
 8aa:	71 81       	ldd	r23, Z+1	; 0x01
 8ac:	82 81       	ldd	r24, Z+2	; 0x02
 8ae:	93 81       	ldd	r25, Z+3	; 0x03
 8b0:	0c 5f       	subi	r16, 0xFC	; 252
 8b2:	1f 4f       	sbci	r17, 0xFF	; 255
 8b4:	06 c0       	rjmp	.+12     	; 0x8c2 <vfprintf+0x2a8>
 8b6:	60 81       	ld	r22, Z
 8b8:	71 81       	ldd	r23, Z+1	; 0x01
 8ba:	80 e0       	ldi	r24, 0x00	; 0
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	0e 5f       	subi	r16, 0xFE	; 254
 8c0:	1f 4f       	sbci	r17, 0xFF	; 255
 8c2:	a4 01       	movw	r20, r8
 8c4:	0e 94 56 05 	call	0xaac	; 0xaac <__ultoa_invert>
 8c8:	a8 2e       	mov	r10, r24
 8ca:	a8 18       	sub	r10, r8
 8cc:	fb 2d       	mov	r31, r11
 8ce:	ff 77       	andi	r31, 0x7F	; 127
 8d0:	7f 2e       	mov	r7, r31
 8d2:	76 fe       	sbrs	r7, 6
 8d4:	0b c0       	rjmp	.+22     	; 0x8ec <vfprintf+0x2d2>
 8d6:	37 2d       	mov	r19, r7
 8d8:	3e 7f       	andi	r19, 0xFE	; 254
 8da:	a5 14       	cp	r10, r5
 8dc:	50 f4       	brcc	.+20     	; 0x8f2 <vfprintf+0x2d8>
 8de:	74 fe       	sbrs	r7, 4
 8e0:	0a c0       	rjmp	.+20     	; 0x8f6 <vfprintf+0x2dc>
 8e2:	72 fc       	sbrc	r7, 2
 8e4:	08 c0       	rjmp	.+16     	; 0x8f6 <vfprintf+0x2dc>
 8e6:	37 2d       	mov	r19, r7
 8e8:	3e 7e       	andi	r19, 0xEE	; 238
 8ea:	05 c0       	rjmp	.+10     	; 0x8f6 <vfprintf+0x2dc>
 8ec:	ba 2c       	mov	r11, r10
 8ee:	37 2d       	mov	r19, r7
 8f0:	03 c0       	rjmp	.+6      	; 0x8f8 <vfprintf+0x2de>
 8f2:	ba 2c       	mov	r11, r10
 8f4:	01 c0       	rjmp	.+2      	; 0x8f8 <vfprintf+0x2de>
 8f6:	b5 2c       	mov	r11, r5
 8f8:	34 ff       	sbrs	r19, 4
 8fa:	0d c0       	rjmp	.+26     	; 0x916 <vfprintf+0x2fc>
 8fc:	fe 01       	movw	r30, r28
 8fe:	ea 0d       	add	r30, r10
 900:	f1 1d       	adc	r31, r1
 902:	80 81       	ld	r24, Z
 904:	80 33       	cpi	r24, 0x30	; 48
 906:	11 f4       	brne	.+4      	; 0x90c <vfprintf+0x2f2>
 908:	39 7e       	andi	r19, 0xE9	; 233
 90a:	09 c0       	rjmp	.+18     	; 0x91e <vfprintf+0x304>
 90c:	32 ff       	sbrs	r19, 2
 90e:	06 c0       	rjmp	.+12     	; 0x91c <vfprintf+0x302>
 910:	b3 94       	inc	r11
 912:	b3 94       	inc	r11
 914:	04 c0       	rjmp	.+8      	; 0x91e <vfprintf+0x304>
 916:	83 2f       	mov	r24, r19
 918:	86 78       	andi	r24, 0x86	; 134
 91a:	09 f0       	breq	.+2      	; 0x91e <vfprintf+0x304>
 91c:	b3 94       	inc	r11
 91e:	33 fd       	sbrc	r19, 3
 920:	13 c0       	rjmp	.+38     	; 0x948 <vfprintf+0x32e>
 922:	30 ff       	sbrs	r19, 0
 924:	06 c0       	rjmp	.+12     	; 0x932 <vfprintf+0x318>
 926:	5a 2c       	mov	r5, r10
 928:	b3 14       	cp	r11, r3
 92a:	18 f4       	brcc	.+6      	; 0x932 <vfprintf+0x318>
 92c:	53 0c       	add	r5, r3
 92e:	5b 18       	sub	r5, r11
 930:	b3 2c       	mov	r11, r3
 932:	b3 14       	cp	r11, r3
 934:	68 f4       	brcc	.+26     	; 0x950 <vfprintf+0x336>
 936:	b7 01       	movw	r22, r14
 938:	80 e2       	ldi	r24, 0x20	; 32
 93a:	90 e0       	ldi	r25, 0x00	; 0
 93c:	3c 87       	std	Y+12, r19	; 0x0c
 93e:	0e 94 1e 05 	call	0xa3c	; 0xa3c <fputc>
 942:	b3 94       	inc	r11
 944:	3c 85       	ldd	r19, Y+12	; 0x0c
 946:	f5 cf       	rjmp	.-22     	; 0x932 <vfprintf+0x318>
 948:	b3 14       	cp	r11, r3
 94a:	10 f4       	brcc	.+4      	; 0x950 <vfprintf+0x336>
 94c:	3b 18       	sub	r3, r11
 94e:	01 c0       	rjmp	.+2      	; 0x952 <vfprintf+0x338>
 950:	31 2c       	mov	r3, r1
 952:	34 ff       	sbrs	r19, 4
 954:	12 c0       	rjmp	.+36     	; 0x97a <vfprintf+0x360>
 956:	b7 01       	movw	r22, r14
 958:	80 e3       	ldi	r24, 0x30	; 48
 95a:	90 e0       	ldi	r25, 0x00	; 0
 95c:	3c 87       	std	Y+12, r19	; 0x0c
 95e:	0e 94 1e 05 	call	0xa3c	; 0xa3c <fputc>
 962:	3c 85       	ldd	r19, Y+12	; 0x0c
 964:	32 ff       	sbrs	r19, 2
 966:	17 c0       	rjmp	.+46     	; 0x996 <vfprintf+0x37c>
 968:	31 fd       	sbrc	r19, 1
 96a:	03 c0       	rjmp	.+6      	; 0x972 <vfprintf+0x358>
 96c:	88 e7       	ldi	r24, 0x78	; 120
 96e:	90 e0       	ldi	r25, 0x00	; 0
 970:	02 c0       	rjmp	.+4      	; 0x976 <vfprintf+0x35c>
 972:	88 e5       	ldi	r24, 0x58	; 88
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	b7 01       	movw	r22, r14
 978:	0c c0       	rjmp	.+24     	; 0x992 <vfprintf+0x378>
 97a:	83 2f       	mov	r24, r19
 97c:	86 78       	andi	r24, 0x86	; 134
 97e:	59 f0       	breq	.+22     	; 0x996 <vfprintf+0x37c>
 980:	31 ff       	sbrs	r19, 1
 982:	02 c0       	rjmp	.+4      	; 0x988 <vfprintf+0x36e>
 984:	8b e2       	ldi	r24, 0x2B	; 43
 986:	01 c0       	rjmp	.+2      	; 0x98a <vfprintf+0x370>
 988:	80 e2       	ldi	r24, 0x20	; 32
 98a:	37 fd       	sbrc	r19, 7
 98c:	8d e2       	ldi	r24, 0x2D	; 45
 98e:	b7 01       	movw	r22, r14
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	0e 94 1e 05 	call	0xa3c	; 0xa3c <fputc>
 996:	a5 14       	cp	r10, r5
 998:	38 f4       	brcc	.+14     	; 0x9a8 <vfprintf+0x38e>
 99a:	b7 01       	movw	r22, r14
 99c:	80 e3       	ldi	r24, 0x30	; 48
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	0e 94 1e 05 	call	0xa3c	; 0xa3c <fputc>
 9a4:	5a 94       	dec	r5
 9a6:	f7 cf       	rjmp	.-18     	; 0x996 <vfprintf+0x37c>
 9a8:	aa 94       	dec	r10
 9aa:	f4 01       	movw	r30, r8
 9ac:	ea 0d       	add	r30, r10
 9ae:	f1 1d       	adc	r31, r1
 9b0:	80 81       	ld	r24, Z
 9b2:	b7 01       	movw	r22, r14
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	0e 94 1e 05 	call	0xa3c	; 0xa3c <fputc>
 9ba:	a1 10       	cpse	r10, r1
 9bc:	f5 cf       	rjmp	.-22     	; 0x9a8 <vfprintf+0x38e>
 9be:	33 20       	and	r3, r3
 9c0:	09 f4       	brne	.+2      	; 0x9c4 <vfprintf+0x3aa>
 9c2:	51 ce       	rjmp	.-862    	; 0x666 <vfprintf+0x4c>
 9c4:	b7 01       	movw	r22, r14
 9c6:	80 e2       	ldi	r24, 0x20	; 32
 9c8:	90 e0       	ldi	r25, 0x00	; 0
 9ca:	0e 94 1e 05 	call	0xa3c	; 0xa3c <fputc>
 9ce:	3a 94       	dec	r3
 9d0:	f6 cf       	rjmp	.-20     	; 0x9be <vfprintf+0x3a4>
 9d2:	f7 01       	movw	r30, r14
 9d4:	86 81       	ldd	r24, Z+6	; 0x06
 9d6:	97 81       	ldd	r25, Z+7	; 0x07
 9d8:	02 c0       	rjmp	.+4      	; 0x9de <vfprintf+0x3c4>
 9da:	8f ef       	ldi	r24, 0xFF	; 255
 9dc:	9f ef       	ldi	r25, 0xFF	; 255
 9de:	2c 96       	adiw	r28, 0x0c	; 12
 9e0:	0f b6       	in	r0, 0x3f	; 63
 9e2:	f8 94       	cli
 9e4:	de bf       	out	0x3e, r29	; 62
 9e6:	0f be       	out	0x3f, r0	; 63
 9e8:	cd bf       	out	0x3d, r28	; 61
 9ea:	df 91       	pop	r29
 9ec:	cf 91       	pop	r28
 9ee:	1f 91       	pop	r17
 9f0:	0f 91       	pop	r16
 9f2:	ff 90       	pop	r15
 9f4:	ef 90       	pop	r14
 9f6:	df 90       	pop	r13
 9f8:	cf 90       	pop	r12
 9fa:	bf 90       	pop	r11
 9fc:	af 90       	pop	r10
 9fe:	9f 90       	pop	r9
 a00:	8f 90       	pop	r8
 a02:	7f 90       	pop	r7
 a04:	6f 90       	pop	r6
 a06:	5f 90       	pop	r5
 a08:	4f 90       	pop	r4
 a0a:	3f 90       	pop	r3
 a0c:	2f 90       	pop	r2
 a0e:	08 95       	ret

00000a10 <strnlen_P>:
 a10:	fc 01       	movw	r30, r24
 a12:	05 90       	lpm	r0, Z+
 a14:	61 50       	subi	r22, 0x01	; 1
 a16:	70 40       	sbci	r23, 0x00	; 0
 a18:	01 10       	cpse	r0, r1
 a1a:	d8 f7       	brcc	.-10     	; 0xa12 <strnlen_P+0x2>
 a1c:	80 95       	com	r24
 a1e:	90 95       	com	r25
 a20:	8e 0f       	add	r24, r30
 a22:	9f 1f       	adc	r25, r31
 a24:	08 95       	ret

00000a26 <strnlen>:
 a26:	fc 01       	movw	r30, r24
 a28:	61 50       	subi	r22, 0x01	; 1
 a2a:	70 40       	sbci	r23, 0x00	; 0
 a2c:	01 90       	ld	r0, Z+
 a2e:	01 10       	cpse	r0, r1
 a30:	d8 f7       	brcc	.-10     	; 0xa28 <strnlen+0x2>
 a32:	80 95       	com	r24
 a34:	90 95       	com	r25
 a36:	8e 0f       	add	r24, r30
 a38:	9f 1f       	adc	r25, r31
 a3a:	08 95       	ret

00000a3c <fputc>:
 a3c:	0f 93       	push	r16
 a3e:	1f 93       	push	r17
 a40:	cf 93       	push	r28
 a42:	df 93       	push	r29
 a44:	fb 01       	movw	r30, r22
 a46:	23 81       	ldd	r18, Z+3	; 0x03
 a48:	21 fd       	sbrc	r18, 1
 a4a:	03 c0       	rjmp	.+6      	; 0xa52 <fputc+0x16>
 a4c:	8f ef       	ldi	r24, 0xFF	; 255
 a4e:	9f ef       	ldi	r25, 0xFF	; 255
 a50:	28 c0       	rjmp	.+80     	; 0xaa2 <fputc+0x66>
 a52:	22 ff       	sbrs	r18, 2
 a54:	16 c0       	rjmp	.+44     	; 0xa82 <fputc+0x46>
 a56:	46 81       	ldd	r20, Z+6	; 0x06
 a58:	57 81       	ldd	r21, Z+7	; 0x07
 a5a:	24 81       	ldd	r18, Z+4	; 0x04
 a5c:	35 81       	ldd	r19, Z+5	; 0x05
 a5e:	42 17       	cp	r20, r18
 a60:	53 07       	cpc	r21, r19
 a62:	44 f4       	brge	.+16     	; 0xa74 <fputc+0x38>
 a64:	a0 81       	ld	r26, Z
 a66:	b1 81       	ldd	r27, Z+1	; 0x01
 a68:	9d 01       	movw	r18, r26
 a6a:	2f 5f       	subi	r18, 0xFF	; 255
 a6c:	3f 4f       	sbci	r19, 0xFF	; 255
 a6e:	31 83       	std	Z+1, r19	; 0x01
 a70:	20 83       	st	Z, r18
 a72:	8c 93       	st	X, r24
 a74:	26 81       	ldd	r18, Z+6	; 0x06
 a76:	37 81       	ldd	r19, Z+7	; 0x07
 a78:	2f 5f       	subi	r18, 0xFF	; 255
 a7a:	3f 4f       	sbci	r19, 0xFF	; 255
 a7c:	37 83       	std	Z+7, r19	; 0x07
 a7e:	26 83       	std	Z+6, r18	; 0x06
 a80:	10 c0       	rjmp	.+32     	; 0xaa2 <fputc+0x66>
 a82:	eb 01       	movw	r28, r22
 a84:	09 2f       	mov	r16, r25
 a86:	18 2f       	mov	r17, r24
 a88:	00 84       	ldd	r0, Z+8	; 0x08
 a8a:	f1 85       	ldd	r31, Z+9	; 0x09
 a8c:	e0 2d       	mov	r30, r0
 a8e:	09 95       	icall
 a90:	89 2b       	or	r24, r25
 a92:	e1 f6       	brne	.-72     	; 0xa4c <fputc+0x10>
 a94:	8e 81       	ldd	r24, Y+6	; 0x06
 a96:	9f 81       	ldd	r25, Y+7	; 0x07
 a98:	01 96       	adiw	r24, 0x01	; 1
 a9a:	9f 83       	std	Y+7, r25	; 0x07
 a9c:	8e 83       	std	Y+6, r24	; 0x06
 a9e:	81 2f       	mov	r24, r17
 aa0:	90 2f       	mov	r25, r16
 aa2:	df 91       	pop	r29
 aa4:	cf 91       	pop	r28
 aa6:	1f 91       	pop	r17
 aa8:	0f 91       	pop	r16
 aaa:	08 95       	ret

00000aac <__ultoa_invert>:
 aac:	fa 01       	movw	r30, r20
 aae:	aa 27       	eor	r26, r26
 ab0:	28 30       	cpi	r18, 0x08	; 8
 ab2:	51 f1       	breq	.+84     	; 0xb08 <__ultoa_invert+0x5c>
 ab4:	20 31       	cpi	r18, 0x10	; 16
 ab6:	81 f1       	breq	.+96     	; 0xb18 <__ultoa_invert+0x6c>
 ab8:	e8 94       	clt
 aba:	6f 93       	push	r22
 abc:	6e 7f       	andi	r22, 0xFE	; 254
 abe:	6e 5f       	subi	r22, 0xFE	; 254
 ac0:	7f 4f       	sbci	r23, 0xFF	; 255
 ac2:	8f 4f       	sbci	r24, 0xFF	; 255
 ac4:	9f 4f       	sbci	r25, 0xFF	; 255
 ac6:	af 4f       	sbci	r26, 0xFF	; 255
 ac8:	b1 e0       	ldi	r27, 0x01	; 1
 aca:	3e d0       	rcall	.+124    	; 0xb48 <__ultoa_invert+0x9c>
 acc:	b4 e0       	ldi	r27, 0x04	; 4
 ace:	3c d0       	rcall	.+120    	; 0xb48 <__ultoa_invert+0x9c>
 ad0:	67 0f       	add	r22, r23
 ad2:	78 1f       	adc	r23, r24
 ad4:	89 1f       	adc	r24, r25
 ad6:	9a 1f       	adc	r25, r26
 ad8:	a1 1d       	adc	r26, r1
 ada:	68 0f       	add	r22, r24
 adc:	79 1f       	adc	r23, r25
 ade:	8a 1f       	adc	r24, r26
 ae0:	91 1d       	adc	r25, r1
 ae2:	a1 1d       	adc	r26, r1
 ae4:	6a 0f       	add	r22, r26
 ae6:	71 1d       	adc	r23, r1
 ae8:	81 1d       	adc	r24, r1
 aea:	91 1d       	adc	r25, r1
 aec:	a1 1d       	adc	r26, r1
 aee:	20 d0       	rcall	.+64     	; 0xb30 <__ultoa_invert+0x84>
 af0:	09 f4       	brne	.+2      	; 0xaf4 <__ultoa_invert+0x48>
 af2:	68 94       	set
 af4:	3f 91       	pop	r19
 af6:	2a e0       	ldi	r18, 0x0A	; 10
 af8:	26 9f       	mul	r18, r22
 afa:	11 24       	eor	r1, r1
 afc:	30 19       	sub	r19, r0
 afe:	30 5d       	subi	r19, 0xD0	; 208
 b00:	31 93       	st	Z+, r19
 b02:	de f6       	brtc	.-74     	; 0xaba <__ultoa_invert+0xe>
 b04:	cf 01       	movw	r24, r30
 b06:	08 95       	ret
 b08:	46 2f       	mov	r20, r22
 b0a:	47 70       	andi	r20, 0x07	; 7
 b0c:	40 5d       	subi	r20, 0xD0	; 208
 b0e:	41 93       	st	Z+, r20
 b10:	b3 e0       	ldi	r27, 0x03	; 3
 b12:	0f d0       	rcall	.+30     	; 0xb32 <__ultoa_invert+0x86>
 b14:	c9 f7       	brne	.-14     	; 0xb08 <__ultoa_invert+0x5c>
 b16:	f6 cf       	rjmp	.-20     	; 0xb04 <__ultoa_invert+0x58>
 b18:	46 2f       	mov	r20, r22
 b1a:	4f 70       	andi	r20, 0x0F	; 15
 b1c:	40 5d       	subi	r20, 0xD0	; 208
 b1e:	4a 33       	cpi	r20, 0x3A	; 58
 b20:	18 f0       	brcs	.+6      	; 0xb28 <__ultoa_invert+0x7c>
 b22:	49 5d       	subi	r20, 0xD9	; 217
 b24:	31 fd       	sbrc	r19, 1
 b26:	40 52       	subi	r20, 0x20	; 32
 b28:	41 93       	st	Z+, r20
 b2a:	02 d0       	rcall	.+4      	; 0xb30 <__ultoa_invert+0x84>
 b2c:	a9 f7       	brne	.-22     	; 0xb18 <__ultoa_invert+0x6c>
 b2e:	ea cf       	rjmp	.-44     	; 0xb04 <__ultoa_invert+0x58>
 b30:	b4 e0       	ldi	r27, 0x04	; 4
 b32:	a6 95       	lsr	r26
 b34:	97 95       	ror	r25
 b36:	87 95       	ror	r24
 b38:	77 95       	ror	r23
 b3a:	67 95       	ror	r22
 b3c:	ba 95       	dec	r27
 b3e:	c9 f7       	brne	.-14     	; 0xb32 <__ultoa_invert+0x86>
 b40:	00 97       	sbiw	r24, 0x00	; 0
 b42:	61 05       	cpc	r22, r1
 b44:	71 05       	cpc	r23, r1
 b46:	08 95       	ret
 b48:	9b 01       	movw	r18, r22
 b4a:	ac 01       	movw	r20, r24
 b4c:	0a 2e       	mov	r0, r26
 b4e:	06 94       	lsr	r0
 b50:	57 95       	ror	r21
 b52:	47 95       	ror	r20
 b54:	37 95       	ror	r19
 b56:	27 95       	ror	r18
 b58:	ba 95       	dec	r27
 b5a:	c9 f7       	brne	.-14     	; 0xb4e <__ultoa_invert+0xa2>
 b5c:	62 0f       	add	r22, r18
 b5e:	73 1f       	adc	r23, r19
 b60:	84 1f       	adc	r24, r20
 b62:	95 1f       	adc	r25, r21
 b64:	a0 1d       	adc	r26, r0
 b66:	08 95       	ret

00000b68 <_exit>:
 b68:	f8 94       	cli

00000b6a <__stop_program>:
 b6a:	ff cf       	rjmp	.-2      	; 0xb6a <__stop_program>
